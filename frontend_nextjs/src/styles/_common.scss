@import "variables";

.primary-button {
  border-radius: 5px;
  padding: 0.5rem 1rem;
  text-align: center;
  color: white;
  font-weight: 500;
  width: 100%;
}
.input {
  background-color: rgb(228, 221, 221);
  color: rgb(41, 41, 41);
  padding: 0.5rem 0.5rem;
  border-radius: 5px;
  outline: none;
  width: 100%;
  position: relative;
}
input::placeholder {
  color: rgb(88, 86, 86);
  font-style: italic;
}
.error {
  color: $errorColor;
}
a {
  color: $linkColor !important;
}

// loading
.loader {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: inline-block;
  border-top: 4px solid $secondaryColor;
  border-right: 4px solid transparent;
  box-sizing: border-box;
  animation: rotation 1s linear infinite;
}
.loader::after {
  content: "";
  box-sizing: border-box;
  position: absolute;
  left: 0;
  top: 0;
  width: 48px;
  height: 48px;
  border-radius: 50%;
  border-bottom: 4px solid $primaryColor;
  border-left: 4px solid transparent;
}
@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes rotationBack {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}
/* Modal  */

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  z-index: 1000;
}

.modalContent {
  width: 30rem;
  margin-top: 10rem;
  height: fit-content;
  text-align: center;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  position: relative;
}

.closeButton {
  position: absolute;
  background: none;
  border: none;
  font-size: 20px;
  cursor: pointer;
  width: fit-content;
  top: 0rem;
  right: 1rem;
  &:hover {
    background: transparent;
  }
}
@mixin hideTapHighlightColor() {
  //Prevent highlight colour when element is tapped
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

@mixin hardwareAccel() {
  //Improve performance on mobile/tablet devices
  transform: translateZ(0);
}

@mixin improveAntiAlias() {
  //Improve aliasing on mobile/tablet devices
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

/* Float */
.float {
  transition-duration: 0.3s;
  transition-property: transform;

  @include hideTapHighlightColor();
  @include hardwareAccel();
  @include improveAntiAlias();

  &:hover {
    transform: translateY(-5px);
  }
}

$size: 1.4em;
$dotCount: 10;
$animationTime: 2.5s;

// Creating Circle and Animation Delay
@for $i from 1 through 10 {
  .peeek-loading li:nth-child(#{$i}) {
    $deg: ($i - 1) * (360deg / $dotCount);
    transform: rotate($deg);
    animation-delay: $animationTime * $i/$dotCount/2;
  }
  .peeek-loading li:nth-child(#{$i}):after {
    animation-delay: $animationTime * $i/$dotCount/2;
  }
}

// Animations
.peeek-loading li {
  animation: dotAnimation $animationTime infinite;
}
@keyframes dotAnimation {
  0%,
  55%,
  100% {
    padding: 0 0 $size * 4 0;
  }
  5%,
  50% {
    padding: $size * 2 0;
  }
}

.peeek-loading li:after {
  animation: dotAnimationTwo $animationTime infinite;
}
@-webkit-keyframes dotAnimationTwo {
  0%,
  55%,
  100% {
    opacity: 1;
    transform: scale(1);
  }
  5%,
  50% {
    opacity: 0.5;
    transform: scale(0.5);
  }
}
.tabs-container {
  display: flex;
  flex-direction: column;
  width: 300px;
  margin: 20px auto;
}

.tabs {
  display: flex;
  border-bottom: 1px solid #ccc;
}

.tab {
  padding: 0.5rem 1rem;
  cursor: pointer;
}

.selected {
  border-bottom: 2px solid blue;
}

.tab-content {
  padding: 20px;
  border: 1px solid #ccc;
}
.editor-container {
  li {
    display: block !important;
  }
  code {
    color: black !important;
  }
}
.tiptap.ProseMirror {
  &.ProseMirror-focused {
    outline: none !important;
  }
  ul {
    li {
      display: block !important;
      p::before {
        content: "ðŸ–¤";
      }
    }
  }
  /* Remove default list style */
  ol {
    list-style-type: none;
    counter-reset: item;
    li {
      display: block;
      margin-bottom: 10px; /* Add spacing between list items */
      &::before {
        content: counter(item) ". "; /* Display the item number followed by a period and a space */
        counter-increment: item;
        display: inline-block;
      }
      p {
        display: inline;
      }
    }
  }
}
